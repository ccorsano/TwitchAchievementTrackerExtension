// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace TwitchAchievementTracker
{

using global::System;
using global::Google.FlatBuffers;

public struct Configuration : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static Configuration GetRootAsConfiguration(ByteBuffer _bb) { return GetRootAsConfiguration(_bb, new Configuration()); }
  public static Configuration GetRootAsConfiguration(ByteBuffer _bb, Configuration obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p.bb_pos = _i; __p.bb = _bb; }
  public Configuration __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public string Version { get { int o = __p.__offset(4); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
  public ArraySegment<byte>? GetVersionBytes() { return __p.__vector_as_arraysegment(4); }
  public PlatformConfiguration ConfigType { get { int o = __p.__offset(6); return o != 0 ? (PlatformConfiguration)__p.bb.Get(o + __p.bb_pos) : PlatformConfiguration.NONE; } }
  public TTable? Config<TTable>() where TTable : struct, IFlatbufferObject { int o = __p.__offset(8); return o != 0 ? (TTable?)__p.__union<TTable>(o) : null; }

  public static Offset<Configuration> CreateConfiguration(FlatBufferBuilder builder,
      StringOffset versionOffset = default(StringOffset),
      PlatformConfiguration config_type = PlatformConfiguration.NONE,
      int configOffset = 0) {
    builder.StartObject(3);
    Configuration.AddConfig(builder, configOffset);
    Configuration.AddVersion(builder, versionOffset);
    Configuration.AddConfigType(builder, config_type);
    return Configuration.EndConfiguration(builder);
  }

  public static void StartConfiguration(FlatBufferBuilder builder) { builder.StartObject(3); }
  public static void AddVersion(FlatBufferBuilder builder, StringOffset versionOffset) { builder.AddOffset(0, versionOffset.Value, 0); }
  public static void AddConfigType(FlatBufferBuilder builder, PlatformConfiguration configType) { builder.AddByte(1, (byte)configType, 0); }
  public static void AddConfig(FlatBufferBuilder builder, int configOffset) { builder.AddOffset(2, configOffset, 0); }
  public static Offset<Configuration> EndConfiguration(FlatBufferBuilder builder) {
    int o = builder.EndObject();
    return new Offset<Configuration>(o);
  }
  public static void FinishConfigurationBuffer(FlatBufferBuilder builder, Offset<Configuration> offset) { builder.Finish(offset.Value); }
  public static void FinishSizePrefixedConfigurationBuffer(FlatBufferBuilder builder, Offset<Configuration> offset) { builder.FinishSizePrefixed(offset.Value); }
};


}
